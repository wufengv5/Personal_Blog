# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-21 08:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog_article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField(default='', max_length=500)),
                ('click_count', models.IntegerField(default=0)),
                ('data_publish', models.DateTimeField(auto_now_add=True)),
                ('tag', models.CharField(max_length=20)),
                ('img', models.ImageField(null=True, upload_to='upload', verbose_name='图片')),
            ],
            options={
                'db_table': 'Blog_article',
            },
        ),
        migrations.CreateModel(
            name='Blog_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'Blog_category',
            },
        ),
        migrations.CreateModel(
            name='Blog_tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.ManyToManyField(to='backweb.Blog_article')),
            ],
            options={
                'db_table': 'Blog_tag',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observer', models.CharField(max_length=20, unique=True)),
                ('content', models.CharField(max_length=200)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('belong_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backweb.Blog_article')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
                ('content', models.CharField(max_length=255)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Notice',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=255, unique=True, verbose_name='密码')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创造时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.CharField(max_length=30)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backweb.Users')),
            ],
            options={
                'db_table': 'user_ticket',
            },
        ),
        migrations.AddField(
            model_name='notice',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backweb.Users'),
        ),
        migrations.AddField(
            model_name='blog_article',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backweb.Blog_category'),
        ),
        migrations.AddField(
            model_name='blog_article',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backweb.Users'),
        ),
    ]
